@use '../abstracts/' as *;

$buttonBorderRadius: 50%;

.testimonials {
  min-height: 100vh;
  min-height: 100dvh;
  position: relative;
  display: flex;
  align-items: center;
  overflow: hidden;
  &::after {
    content: '';
    position: absolute;
    aspect-ratio: 1;
    background-image: url('../../pattern-curve.svg');
    background-repeat: no-repeat;
    background-size: contain;
    background-position: bottom left;
    width: 100%;
    height: 150px;
    top: 100%;
    transform: translateY(-100%);
    z-index: -1;
  }
  &__carousel {
    height: 100%;
    display: flex;
    flex-direction: column;
    text-align: center;
    padding-inline: 1em;
    @include respond-to('medium') {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      text-align: left;
    }
  }
  &__media {
    width: clamp(210px, 25vw + 130px, 390px);
    margin-inline: auto;
    position: relative;
    @include respond-to('medium') {
      order: 2;
    }

    &::after {
      content: '';
      position: absolute;
      inset: -10%;
      aspect-ratio: 1;
      background-image: url('../../pattern-bg.svg');
      background-repeat: no-repeat;
      background-size: contain;
      top: -10%;
      z-index: -1;

      animation: rotatePattern 10s infinite linear;
    }
  }
  &__img-wrapper {
    border-radius: 9px;
    overflow: hidden;
    position: relative;
    width: clamp(210px, 25vw + 130px, 390px);
    aspect-ratio: 1;
    box-shadow: 0px 30px 61px -33px hsl(240, 38%, 30%);
  }
  &__img {
    --opacity: 0;
    --translate-value: 100%;
    --rotate-value: 90deg;
    position: absolute;
    transform: translateY(calc(var(--translate-value))) rotateY(var(--rotate-value));
    opacity: var(--opacity);
    transition: all 300ms ease-in-out;
  }
  &__img.active {
    --opacity: 1;
    --translate-value: 0%;
    --rotate-value: 0deg;
  }

  &__body {
    max-width: 600px;
    width: 100%;
    height: var(--testimonials__media-height);
    margin-inline: auto;
    position: relative;
    &::after {
      content: '';
      position: absolute;
      aspect-ratio: 1;
      background-image: url('../../pattern-quotes.svg');
      background-repeat: no-repeat;
      background-size: contain;
      background-position: bottom left;
      @include respond-to('medium') {
        top: 25%;
        left: 0%;
        width: 10%;
        transform: translateX(220%);
        z-index: -1;
      }
      width: 12%;
      aspect-ratio: 1;
      top: 5%;
      left: 50%;
      transform: translateX(-50%);
    }
    @include respond-to('medium') {
      max-width: unset;
      margin-inline: unset;
      padding-inline: 4em;
      order: 1;
    }
  }

  &__body-wrapper {
    width: 100%;
    height: 100%;
    position: relative;
  }
  &__content {
    --opacity: 0;
    --translate-value: 100%;
    --rotate-value: 90deg;
    position: absolute;
    top: 50%;
    transform: translateY(calc(-50% + var(--translate-value))) rotateY(var(--rotate-value));
    opacity: var(--opacity);
    transition: all 300ms ease-in-out;
  }
  &__content.active {
    --opacity: 1;
    --translate-value: 0%;
    --rotate-value: 0deg;
  }

  &__controls {
    display: flex;
    justify-content: center;
    width: 100%;
    transform: translateY(-50%);
  }
  &__button {
    width: 35px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    background-color: white;
    cursor: pointer;
    @include respond-to('medium') {
      transform: translateX(-200%);
    }
    svg {
      scale: 0.6;
    }
    &--previous {
      border-top-left-radius: $buttonBorderRadius;
      border-bottom-left-radius: $buttonBorderRadius;
    }
    &--next {
      border-top-right-radius: $buttonBorderRadius;
      border-bottom-right-radius: $buttonBorderRadius;
    }
    &:hover {
      background-color: rgb(243, 237, 252);
      transition: all 150ms ease-in-out;
    }
  }
  &__text {
    line-height: 1.5;
  }

  &__position {
    display: block;
    @include respond-to('medium') {
      display: inline-block;
      margin-left: 0.5em;
    }
  }
}

@keyframes rotatePattern {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
